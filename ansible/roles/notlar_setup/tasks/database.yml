---
- name: Start the PostgreSQL service
  become: true
  ansible.builtin.systemd:
    name: postgresql
    state: started
    enabled: true

- name: Install psycopg2 globally
  become: true
  ansible.builtin.pip:
    name: psycopg2
    state: present
    virtualenv_site_packages: true
  environment:
    PIP_BREAK_SYSTEM_PACKAGES: "1"

- name: "Create db user"
  postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  become: true
  become_user: postgres

- name: Ensure the database 'notlar' exists
  postgresql_db:
    name: notlar
    state: present
  become: true
  become_user: postgres

- name: "Grant db user access to app db"
  postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    grant_option: false
    privs: all
  become: true
  become_user: postgres

# This is for project example. Privileges should be handled
# in other more safe way.
- name: Grant privileges to database
  community.postgresql.postgresql_privs:
    database: "{{ db_name }}"
    state: present
    privs: SELECT,INSERT,UPDATE,SEQUENCES
    type: table
    objs: ALL_IN_SCHEMA
    schema: public
    roles: "{{ db_user }}"
    grant_option: true
  become: true
  become_user: postgres

- name: Importing database data
  ansible.builtin.shell: psql < "/tmp/notlar.sql"
  become: true
  become_user: postgres

- name: Delete file
  ansible.builtin.file:
    path: "/tmp/notlar.sql"
    state: absent
  become: true
  become_user: "{{ app_user }}"
